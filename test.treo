import reo.fifo1;

test(a,b) {

	fifo[2] = (a?,b!) {
		fifo1(a,x) 
		fifo1(x,b)
	}

	fifo[3] = (a?,b!) {
		fifo1(a,x) 
		fifo[2](x,b)
	}

	fifo[3](g,h)


/*	fifo = <k:int>(a?, b!) { 
		fifo[k](a,b)
		for i = 0..k {
			if (i == 0) {
				fifo[0] = (a?,b!) {
					a = b
				}
			} else (i > 0) {
				fifo[i] = (a?,b!) {
					fifo1(a,x) 
					fifo[i-1](x,b)
				}
			}
		}
	}
	fifo<2>(a,b)
	fifo<1>(b,c)
	fifo<1>(c,d)

	
	fifo<2>(a,b)
	
	recursive<k:int>(a?,b!) {
		if (k==0) {
			a=b 
		} else {
			recursive<k-1>(a,x) 
			fifo1(x,b)		
		}
	}
*/	
	//recursive<2>(a,d)

}
